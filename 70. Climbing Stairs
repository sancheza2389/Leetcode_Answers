/*

  You are climbing a staircase. It takes n steps to reach the top.

  Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?



  Example 1:

  Input: n = 2
  Output: 2
  Explanation: There are two ways to climb to the top.
  1. 1 step + 1 step
  2. 2 steps
  Example 2:

  Input: n = 3
  Output: 3
  Explanation: There are three ways to climb to the top.
  1. 1 step + 1 step + 1 step
  2. 1 step + 2 steps
  3. 2 steps + 1 step
  
*/

/**
 * @param {number} n
 * @return {number}
 */
 
var climbStairs = function(n) {
    if(n <= 1) return 1; // Base case. Will return 1 if n = 1 or 0 since both only have one way each
    // Use of the Fibonacci sequence
    let oneStep = 0;
    let twoStep = 1;
    let total = 0;  // Will contain the sum of the two preceeding numbers in sequence 
    
    for(let i = 0; i < n; i++){
        total = oneStep + twoStep
        oneStep = twoStep
        twoStep = total
    } 
    
    return total;
};
